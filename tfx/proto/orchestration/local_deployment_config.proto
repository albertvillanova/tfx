// Copyright 2020 Google LLC. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package tfx.orchestration.deployment_config;

import "ml_metadata/proto/metadata_store.proto";
import "tfx/proto/orchestration/executable_spec.proto";

message ExecutableSpec {
  oneof spec {
    tfx.orchestration.executable_spec.PythonClassExecutableSpec
        python_class_executable_spec = 1;
  }
}

message LocalPlatformConfig {
  repeated string beam_pipeline_args = 1;
}

// Definition for local deployment configs.
message LocalDeploymentConfig {
  // A key from `node_id` to executor specs. Note that this will cover all nodes
  // that has business logic to process.
  map<string, ExecutableSpec> executor_specs = 1;
  // A key from `node_id` to custom driver specs. Note that this map usually has
  // less entries than the `executor_specs` as we only expect advanced users to
  // set custom driver logic.
  map<string, ExecutableSpec> custom_driver_specs = 2;
  // Connection config for ML-metadata.
  ml_metadata.ConnectionConfig metadata_connection_config = 3;
}
